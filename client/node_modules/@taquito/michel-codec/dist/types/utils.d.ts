import { Prim } from "./micheline";
export declare type Tuple<T, N extends number> = N extends 1 ? [T] : N extends 2 ? [T, T] : N extends 3 ? [T, T, T] : N extends 4 ? [T, T, T, T] : never;
declare type RequiredProp<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;
declare type OmitProp<T, K extends keyof T> = Omit<T, K> & {
    [P in K]?: never;
};
export declare type ReqArgs<T extends Prim> = RequiredProp<T, "args">;
export declare type NoArgs<T extends Prim> = OmitProp<T, "args">;
export declare type NoAnnots<T extends Prim> = OmitProp<T, "annots">;
export {};
