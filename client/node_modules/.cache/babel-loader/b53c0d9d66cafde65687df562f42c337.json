{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ConseilErrorTypes_1 = require(\"../types/conseil/ConseilErrorTypes\");\n\nconst FetchSelector_1 = __importDefault(require(\"../utils/FetchSelector\"));\n\nconst LoggerSelector_1 = __importDefault(require(\"../utils/LoggerSelector\"));\n\nconst log = LoggerSelector_1.default.getLogger();\nconst fetch = FetchSelector_1.default.getFetch();\nvar ConseilDataClient;\n\n(function (ConseilDataClient) {\n  function executeEntityQuery(serverInfo, platform, network, entity, query) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = `${serverInfo.url}/v2/data/${platform}/${network}/${entity}`;\n      log.debug(`ConseilDataClient.executeEntityQuery request: ${url}, ${JSON.stringify(query)}`);\n      return fetch(url, {\n        method: 'post',\n        headers: {\n          'apiKey': serverInfo.apiKey,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(query)\n      }).then(r => {\n        if (!r.ok) {\n          log.error(`ConseilDataClient.executeEntityQuery request: ${url}, ${JSON.stringify(query)}, failed with ${r.statusText}(${r.status})`);\n          throw new ConseilErrorTypes_1.ConseilRequestError(r.status, r.statusText, url, query);\n        }\n\n        return r;\n      }).then(r => {\n        const isJSONResponse = r.headers.get('content-type').toLowerCase().includes('application/json');\n        const response = isJSONResponse ? r.json() : r.text();\n        log.debug(`ConseilDataClient.executeEntityQuery response: ${isJSONResponse ? JSON.stringify(response) : response}`);\n        return response;\n      });\n    });\n  }\n\n  ConseilDataClient.executeEntityQuery = executeEntityQuery;\n})(ConseilDataClient = exports.ConseilDataClient || (exports.ConseilDataClient = {}));","map":{"version":3,"sources":["../../src/reporting/ConseilDataClient.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,mBAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;;AACA,MAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AAEA,MAAM,GAAG,GAAG,gBAAA,CAAA,OAAA,CAAY,SAAZ,EAAZ;AACA,MAAM,KAAK,GAAG,eAAA,CAAA,OAAA,CAAc,QAAd,EAAd;AAKA,IAAiB,iBAAjB;;AAAA,CAAA,UAAiB,iBAAjB,EAAkC;AAU9B,WAAsB,kBAAtB,CAAyC,UAAzC,EAAwE,QAAxE,EAA0F,OAA1F,EAA2G,MAA3G,EAA2H,KAA3H,EAA8I;;AAC1I,YAAM,GAAG,GAAG,GAAG,UAAU,CAAC,GAAG,YAAY,QAAQ,IAAI,OAAO,IAAI,MAAM,EAAtE;AACA,MAAA,GAAG,CAAC,KAAJ,CAAU,iDAAiD,GAAG,KAAK,IAAI,CAAC,SAAL,CAAe,KAAf,CAAqB,EAAxF;AAEA,aAAO,KAAK,CAAC,GAAD,EAAM;AACd,QAAA,MAAM,EAAE,MADM;AAEd,QAAA,OAAO,EAAE;AAAE,oBAAU,UAAU,CAAC,MAAvB;AAA+B,0BAAgB;AAA/C,SAFK;AAGd,QAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,KAAf;AAHQ,OAAN,CAAL,CAKN,IALM,CAKD,CAAC,IAAG;AACN,YAAI,CAAC,CAAC,CAAC,EAAP,EAAW;AACP,UAAA,GAAG,CAAC,KAAJ,CAAU,iDAAiD,GAAG,KAAK,IAAI,CAAC,SAAL,CAAe,KAAf,CAAqB,iBAAiB,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,GAAjI;AACA,gBAAM,IAAI,mBAAA,CAAA,mBAAJ,CAAwB,CAAC,CAAC,MAA1B,EAAkC,CAAC,CAAC,UAApC,EAAgD,GAAhD,EAAqD,KAArD,CAAN;AACH;;AACD,eAAO,CAAP;AACH,OAXM,EAYN,IAZM,CAYD,CAAC,IAAG;AACN,cAAM,cAAc,GAAY,CAAC,CAAC,OAAF,CAAU,GAAV,CAAc,cAAd,EAA8B,WAA9B,GAA4C,QAA5C,CAAqD,kBAArD,CAAhC;AACA,cAAM,QAAQ,GAAG,cAAc,GAAG,CAAC,CAAC,IAAF,EAAH,GAAc,CAAC,CAAC,IAAF,EAA7C;AAEA,QAAA,GAAG,CAAC,KAAJ,CAAU,kDAAkD,cAAc,GAAG,IAAI,CAAC,SAAL,CAAe,QAAf,CAAH,GAA8B,QAAQ,EAAhH;AAEA,eAAO,QAAP;AACH,OAnBM,CAAP;AAoBH,K;AAAA;;AAxBqB,EAAA,iBAAA,CAAA,kBAAA,GAAkB,kBAAlB;AAyBzB,CAnCD,EAAiB,iBAAiB,GAAjB,OAAA,CAAA,iBAAA,KAAA,OAAA,CAAA,iBAAA,GAAiB,EAAjB,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ConseilErrorTypes_1 = require(\"../types/conseil/ConseilErrorTypes\");\nconst FetchSelector_1 = __importDefault(require(\"../utils/FetchSelector\"));\nconst LoggerSelector_1 = __importDefault(require(\"../utils/LoggerSelector\"));\nconst log = LoggerSelector_1.default.getLogger();\nconst fetch = FetchSelector_1.default.getFetch();\nvar ConseilDataClient;\n(function (ConseilDataClient) {\n    function executeEntityQuery(serverInfo, platform, network, entity, query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${serverInfo.url}/v2/data/${platform}/${network}/${entity}`;\n            log.debug(`ConseilDataClient.executeEntityQuery request: ${url}, ${JSON.stringify(query)}`);\n            return fetch(url, {\n                method: 'post',\n                headers: { 'apiKey': serverInfo.apiKey, 'Content-Type': 'application/json' },\n                body: JSON.stringify(query)\n            })\n                .then(r => {\n                if (!r.ok) {\n                    log.error(`ConseilDataClient.executeEntityQuery request: ${url}, ${JSON.stringify(query)}, failed with ${r.statusText}(${r.status})`);\n                    throw new ConseilErrorTypes_1.ConseilRequestError(r.status, r.statusText, url, query);\n                }\n                return r;\n            })\n                .then(r => {\n                const isJSONResponse = r.headers.get('content-type').toLowerCase().includes('application/json');\n                const response = isJSONResponse ? r.json() : r.text();\n                log.debug(`ConseilDataClient.executeEntityQuery response: ${isJSONResponse ? JSON.stringify(response) : response}`);\n                return response;\n            });\n        });\n    }\n    ConseilDataClient.executeEntityQuery = executeEntityQuery;\n})(ConseilDataClient = exports.ConseilDataClient || (exports.ConseilDataClient = {}));\n//# sourceMappingURL=ConseilDataClient.js.map"]},"metadata":{},"sourceType":"script"}