{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst blakejs = __importStar(require(\"blakejs\"));\n\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\n\nconst wrapper = require('./WrapperWrapper');\n\nvar CryptoUtils;\n\n(function (CryptoUtils) {\n  function generateSaltForPwHash() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const s = yield wrapper.salt();\n      return s;\n    });\n  }\n\n  CryptoUtils.generateSaltForPwHash = generateSaltForPwHash;\n\n  function encryptMessage(message, passphrase, salt) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const messageBytes = Buffer.from(message);\n      const keyBytes = yield wrapper.pwhash(passphrase, salt);\n      const n = yield wrapper.nonce();\n      const nonce = Buffer.from(n);\n      const s = yield wrapper.close(messageBytes, nonce, keyBytes);\n      const cipherText = Buffer.from(s);\n      return Buffer.concat([nonce, cipherText]);\n    });\n  }\n\n  CryptoUtils.encryptMessage = encryptMessage;\n\n  function decryptMessage(nonce_and_ciphertext, passphrase, salt) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const keyBytes = yield wrapper.pwhash(passphrase, salt);\n      const m = yield wrapper.open(nonce_and_ciphertext, keyBytes);\n      return Buffer.from(m).toString();\n    });\n  }\n\n  CryptoUtils.decryptMessage = decryptMessage;\n\n  function simpleHash(payload, length) {\n    return Buffer.from(blakejs.blake2b(payload, null, length));\n  }\n\n  CryptoUtils.simpleHash = simpleHash;\n\n  function generateKeys(seed) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const k = yield wrapper.keys(seed);\n      return {\n        privateKey: k.privateKey,\n        publicKey: k.publicKey\n      };\n    });\n  }\n\n  CryptoUtils.generateKeys = generateKeys;\n\n  function recoverPublicKey(secretKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const k = yield wrapper.publickey(secretKey);\n      return {\n        privateKey: k.privateKey,\n        publicKey: k.publicKey\n      };\n    });\n  }\n\n  CryptoUtils.recoverPublicKey = recoverPublicKey;\n\n  function signDetached(payload, secretKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const b = yield wrapper.sign(payload, secretKey);\n      return Buffer.from(b);\n    });\n  }\n\n  CryptoUtils.signDetached = signDetached;\n\n  function checkSignature(signature, payload, publicKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield wrapper.checkSignature(signature, payload, publicKey);\n    });\n  }\n\n  CryptoUtils.checkSignature = checkSignature;\n\n  function twoByteHex(n) {\n    if (n < 128) {\n      return ('0' + n.toString(16)).slice(-2);\n    }\n\n    let h = '';\n\n    if (n > 2147483648) {\n      let r = big_integer_1.default(n);\n\n      while (r.greater(0)) {\n        h = ('0' + r.and(127).toString(16)).slice(-2) + h;\n        r = r.shiftRight(7);\n      }\n    } else {\n      let r = n;\n\n      while (r > 0) {\n        h = ('0' + (r & 127).toString(16)).slice(-2) + h;\n        r = r >> 7;\n      }\n    }\n\n    return h;\n  }\n\n  CryptoUtils.twoByteHex = twoByteHex;\n\n  function fromByteHex(s) {\n    if (s.length === 2) {\n      return parseInt(s, 16);\n    }\n\n    if (s.length <= 8) {\n      let n = parseInt(s.slice(-2), 16);\n\n      for (let i = 1; i < s.length / 2; i++) {\n        n += parseInt(s.slice(-2 * i - 2, -2 * i), 16) << 7 * i;\n      }\n\n      return n;\n    }\n\n    let n = big_integer_1.default(parseInt(s.slice(-2), 16));\n\n    for (let i = 1; i < s.length / 2; i++) {\n      n = n.add(big_integer_1.default(parseInt(s.slice(-2 * i - 2, -2 * i), 16)).shiftLeft(7 * i));\n    }\n\n    return n.toJSNumber();\n  }\n\n  CryptoUtils.fromByteHex = fromByteHex;\n})(CryptoUtils = exports.CryptoUtils || (exports.CryptoUtils = {}));","map":{"version":3,"sources":["../../src/utils/CryptoUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst blakejs = __importStar(require(\"blakejs\"));\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\nconst wrapper = require('./WrapperWrapper');\nvar CryptoUtils;\n(function (CryptoUtils) {\n    function generateSaltForPwHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const s = yield wrapper.salt();\n            return s;\n        });\n    }\n    CryptoUtils.generateSaltForPwHash = generateSaltForPwHash;\n    function encryptMessage(message, passphrase, salt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const messageBytes = Buffer.from(message);\n            const keyBytes = yield wrapper.pwhash(passphrase, salt);\n            const n = yield wrapper.nonce();\n            const nonce = Buffer.from(n);\n            const s = yield wrapper.close(messageBytes, nonce, keyBytes);\n            const cipherText = Buffer.from(s);\n            return Buffer.concat([nonce, cipherText]);\n        });\n    }\n    CryptoUtils.encryptMessage = encryptMessage;\n    function decryptMessage(nonce_and_ciphertext, passphrase, salt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyBytes = yield wrapper.pwhash(passphrase, salt);\n            const m = yield wrapper.open(nonce_and_ciphertext, keyBytes);\n            return Buffer.from(m).toString();\n        });\n    }\n    CryptoUtils.decryptMessage = decryptMessage;\n    function simpleHash(payload, length) {\n        return Buffer.from(blakejs.blake2b(payload, null, length));\n    }\n    CryptoUtils.simpleHash = simpleHash;\n    function generateKeys(seed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const k = yield wrapper.keys(seed);\n            return { privateKey: k.privateKey, publicKey: k.publicKey };\n        });\n    }\n    CryptoUtils.generateKeys = generateKeys;\n    function recoverPublicKey(secretKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const k = yield wrapper.publickey(secretKey);\n            return { privateKey: k.privateKey, publicKey: k.publicKey };\n        });\n    }\n    CryptoUtils.recoverPublicKey = recoverPublicKey;\n    function signDetached(payload, secretKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const b = yield wrapper.sign(payload, secretKey);\n            return Buffer.from(b);\n        });\n    }\n    CryptoUtils.signDetached = signDetached;\n    function checkSignature(signature, payload, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield wrapper.checkSignature(signature, payload, publicKey);\n        });\n    }\n    CryptoUtils.checkSignature = checkSignature;\n    function twoByteHex(n) {\n        if (n < 128) {\n            return ('0' + n.toString(16)).slice(-2);\n        }\n        let h = '';\n        if (n > 2147483648) {\n            let r = big_integer_1.default(n);\n            while (r.greater(0)) {\n                h = ('0' + (r.and(127)).toString(16)).slice(-2) + h;\n                r = r.shiftRight(7);\n            }\n        }\n        else {\n            let r = n;\n            while (r > 0) {\n                h = ('0' + (r & 127).toString(16)).slice(-2) + h;\n                r = r >> 7;\n            }\n        }\n        return h;\n    }\n    CryptoUtils.twoByteHex = twoByteHex;\n    function fromByteHex(s) {\n        if (s.length === 2) {\n            return parseInt(s, 16);\n        }\n        if (s.length <= 8) {\n            let n = parseInt(s.slice(-2), 16);\n            for (let i = 1; i < s.length / 2; i++) {\n                n += parseInt(s.slice(-2 * i - 2, -2 * i), 16) << (7 * i);\n            }\n            return n;\n        }\n        let n = big_integer_1.default(parseInt(s.slice(-2), 16));\n        for (let i = 1; i < s.length / 2; i++) {\n            n = n.add(big_integer_1.default(parseInt(s.slice(-2 * i - 2, -2 * i), 16)).shiftLeft(7 * i));\n        }\n        return n.toJSNumber();\n    }\n    CryptoUtils.fromByteHex = fromByteHex;\n})(CryptoUtils = exports.CryptoUtils || (exports.CryptoUtils = {}));\n//# sourceMappingURL=CryptoUtils.js.map"]},"metadata":{},"sourceType":"script"}