{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst fs = __importStar(require(\"fs\"));\n\nconst CryptoUtils_1 = require(\"../../utils/CryptoUtils\");\n\nconst TezosMessageUtil_1 = require(\"../../chain/tezos/TezosMessageUtil\");\n\nvar TezosFileWallet;\n\n(function (TezosFileWallet) {\n  function saveWallet(filename, wallet, passphrase) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const keys = JSON.stringify(wallet.identities);\n      const salt = yield CryptoUtils_1.CryptoUtils.generateSaltForPwHash();\n      const encryptedKeys = yield CryptoUtils_1.CryptoUtils.encryptMessage(keys, passphrase, salt);\n      const encryptedWallet = {\n        version: '1',\n        salt: TezosMessageUtil_1.TezosMessageUtils.readBufferWithHint(salt, ''),\n        ciphertext: TezosMessageUtil_1.TezosMessageUtils.readBufferWithHint(encryptedKeys, ''),\n        kdf: 'Argon2'\n      };\n      const p = new Promise((resolve, reject) => {\n        fs.writeFile(filename, JSON.stringify(encryptedWallet), err => {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve();\n        });\n      });\n      yield p;\n      return loadWallet(filename, passphrase);\n    });\n  }\n\n  TezosFileWallet.saveWallet = saveWallet;\n\n  function loadWallet(filename, passphrase) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const p = new Promise((resolve, reject) => {\n        fs.readFile(filename, (err, data) => {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          const encryptedWallet = JSON.parse(data.toString());\n          resolve(encryptedWallet);\n        });\n      });\n      const ew = yield p;\n      const encryptedKeys = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.ciphertext);\n      const salt = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.salt);\n      const keys = JSON.parse(yield CryptoUtils_1.CryptoUtils.decryptMessage(encryptedKeys, passphrase, salt));\n      return {\n        identities: keys\n      };\n    });\n  }\n\n  TezosFileWallet.loadWallet = loadWallet;\n\n  function loadWalletString(content, passphrase) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const ew = JSON.parse(content.toString());\n      const encryptedKeys = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.ciphertext);\n      const salt = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.salt);\n      const keys = JSON.parse(yield CryptoUtils_1.CryptoUtils.decryptMessage(encryptedKeys, passphrase, salt));\n      return {\n        identities: keys\n      };\n    });\n  }\n\n  TezosFileWallet.loadWalletString = loadWalletString;\n\n  function createWallet(filename, password) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const wallet = {\n        identities: []\n      };\n      yield saveWallet(filename, wallet, password);\n      return wallet;\n    });\n  }\n\n  TezosFileWallet.createWallet = createWallet;\n})(TezosFileWallet = exports.TezosFileWallet || (exports.TezosFileWallet = {}));","map":{"version":3,"sources":["../../../src/identity/tezos/TezosFileWallet.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = __importStar(require(\"fs\"));\nconst CryptoUtils_1 = require(\"../../utils/CryptoUtils\");\nconst TezosMessageUtil_1 = require(\"../../chain/tezos/TezosMessageUtil\");\nvar TezosFileWallet;\n(function (TezosFileWallet) {\n    function saveWallet(filename, wallet, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keys = JSON.stringify(wallet.identities);\n            const salt = yield CryptoUtils_1.CryptoUtils.generateSaltForPwHash();\n            const encryptedKeys = yield CryptoUtils_1.CryptoUtils.encryptMessage(keys, passphrase, salt);\n            const encryptedWallet = {\n                version: '1',\n                salt: TezosMessageUtil_1.TezosMessageUtils.readBufferWithHint(salt, ''),\n                ciphertext: TezosMessageUtil_1.TezosMessageUtils.readBufferWithHint(encryptedKeys, ''),\n                kdf: 'Argon2'\n            };\n            const p = new Promise((resolve, reject) => {\n                fs.writeFile(filename, JSON.stringify(encryptedWallet), err => {\n                    if (err) {\n                        reject(err);\n                        return;\n                    }\n                    resolve();\n                });\n            });\n            yield p;\n            return loadWallet(filename, passphrase);\n        });\n    }\n    TezosFileWallet.saveWallet = saveWallet;\n    function loadWallet(filename, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const p = new Promise((resolve, reject) => {\n                fs.readFile(filename, (err, data) => {\n                    if (err) {\n                        reject(err);\n                        return;\n                    }\n                    const encryptedWallet = JSON.parse(data.toString());\n                    resolve(encryptedWallet);\n                });\n            });\n            const ew = yield p;\n            const encryptedKeys = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.ciphertext);\n            const salt = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.salt);\n            const keys = JSON.parse(yield CryptoUtils_1.CryptoUtils.decryptMessage(encryptedKeys, passphrase, salt));\n            return { identities: keys };\n        });\n    }\n    TezosFileWallet.loadWallet = loadWallet;\n    function loadWalletString(content, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ew = JSON.parse(content.toString());\n            const encryptedKeys = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.ciphertext);\n            const salt = TezosMessageUtil_1.TezosMessageUtils.writeBufferWithHint(ew.salt);\n            const keys = JSON.parse(yield CryptoUtils_1.CryptoUtils.decryptMessage(encryptedKeys, passphrase, salt));\n            return { identities: keys };\n        });\n    }\n    TezosFileWallet.loadWalletString = loadWalletString;\n    function createWallet(filename, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = { identities: [] };\n            yield saveWallet(filename, wallet, password);\n            return wallet;\n        });\n    }\n    TezosFileWallet.createWallet = createWallet;\n})(TezosFileWallet = exports.TezosFileWallet || (exports.TezosFileWallet = {}));\n//# sourceMappingURL=TezosFileWallet.js.map"]},"metadata":{},"sourceType":"script"}