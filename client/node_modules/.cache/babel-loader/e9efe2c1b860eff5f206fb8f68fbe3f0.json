{"ast":null,"code":"import { nanoid as e } from \"nanoid\";\nimport { TezosToolkit as r, createTransferOperation as t, createOriginationOperation as n, createSetDelegateOperation as o } from \"@taquito/taquito\";\nvar a, i, s;\n\nfunction u() {\n  return (u = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = arguments[r];\n\n      for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nfunction c(e, r) {\n  e.prototype = Object.create(r.prototype), e.prototype.constructor = e, e.__proto__ = r;\n}\n\nfunction p(e, r) {\n  if (null == e) return {};\n  var t,\n      n,\n      o = {},\n      a = Object.keys(e);\n\n  for (n = 0; n < a.length; n++) r.indexOf(t = a[n]) >= 0 || (o[t] = e[t]);\n\n  return o;\n}\n\n!function (e) {\n  e.PermissionRequest = \"PERMISSION_REQUEST\", e.PermissionResponse = \"PERMISSION_RESPONSE\", e.OperationRequest = \"OPERATION_REQUEST\", e.OperationResponse = \"OPERATION_RESPONSE\";\n}(a || (a = {})), function (e) {\n  e.NotGranted = \"NOT_GRANTED\", e.NotFound = \"NOT_FOUND\", e.InvalidParams = \"INVALID_PARAMS\";\n}(i || (i = {})), function (e) {\n  e.Request = \"THANOS_PAGE_REQUEST\", e.Response = \"THANOS_PAGE_RESPONSE\", e.ErrorResponse = \"THANOS_PAGE_ERROR_RESPONSE\";\n}(s || (s = {}));\n\nvar l = function (e, r) {\n  try {\n    return Promise.resolve(h({\n      type: a.OperationRequest,\n      sourcePkh: e,\n      opParams: r\n    })).then(function (e) {\n      return d(e.type === a.OperationResponse), e.opHash;\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    m = function (e, r, t) {\n  try {\n    return Promise.resolve(h({\n      type: a.PermissionRequest,\n      network: e,\n      appMeta: r,\n      force: t\n    })).then(function (e) {\n      return d(e.type === a.PermissionResponse), {\n        pkh: e.pkh,\n        rpc: e.rpc\n      };\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction f() {\n  return new Promise(function (e) {\n    var r = function (e) {\n      var r, n;\n      e.source === window && (null === (r = e.data) || void 0 === r ? void 0 : r.type) === s.Response && \"PONG\" === (null === (n = e.data) || void 0 === n ? void 0 : n.payload) && t(!0);\n    },\n        t = function (t) {\n      e(t), window.removeEventListener(\"message\", r), clearTimeout(n);\n    };\n\n    P({\n      type: s.Request,\n      payload: \"PING\"\n    }), window.addEventListener(\"message\", r);\n    var n = setTimeout(function () {\n      return t(!1);\n    }, 500);\n  });\n}\n\nfunction v(e) {\n  var r,\n      t = !1;\n  return function n(o) {\n    void 0 === o && (o = 0);\n\n    try {\n      var a = o < 5;\n      return Promise.resolve(f()).then(function (i) {\n        t !== i && (e(i), t = i), r = setTimeout(n, i ? 1e4 : a ? 0 : 5e3, a ? o + 1 : o);\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }(), function () {\n    return clearTimeout(r);\n  };\n}\n\nfunction h(r) {\n  return new Promise(function (t, n) {\n    var o = e();\n    P({\n      type: s.Request,\n      payload: r,\n      reqId: o\n    }), window.addEventListener(\"message\", function e(r) {\n      var a = r.data;\n\n      switch (!0) {\n        case r.source !== window || (null == a ? void 0 : a.reqId) !== o:\n          return;\n\n        case (null == a ? void 0 : a.type) === s.Response:\n          t(a.payload), window.removeEventListener(\"message\", e);\n          break;\n\n        case (null == a ? void 0 : a.type) === s.ErrorResponse:\n          n(function (e) {\n            switch (!0) {\n              case e === i.NotGranted:\n                return new E();\n\n              case e === i.NotFound:\n                return new w();\n\n              case e === i.InvalidParams:\n                return new R();\n\n              case null == e ? void 0 : e.startsWith(\"__tezos__\"):\n                return new Error(e.replace(\"__tezos__\", \"\"));\n\n              default:\n                return new y();\n            }\n          }(a.payload)), window.removeEventListener(\"message\", e);\n      }\n    });\n  });\n}\n\nfunction d(e) {\n  if (!e) throw new Error(\"Invalid response recieved\");\n}\n\nfunction P(e) {\n  window.postMessage(e, \"*\");\n}\n\nvar y = function () {\n  this.name = \"ThanosWalletError\", this.message = \"An unknown error occured. Please try again or report it\";\n},\n    E = function (e) {\n  function r() {\n    var r;\n    return (r = e.apply(this, arguments) || this).name = \"NotGrantedThanosWalletError\", r.message = \"Permission Not Granted\", r;\n  }\n\n  return c(r, e), r;\n}(y),\n    w = function (e) {\n  function r() {\n    var r;\n    return (r = e.apply(this, arguments) || this).name = \"NotFoundThanosWalletError\", r.message = \"Account Not Found. Try connect again\", r;\n  }\n\n  return c(r, e), r;\n}(y),\n    R = function (e) {\n  function r() {\n    var r;\n    return (r = e.apply(this, arguments) || this).name = \"InvalidParamsThanosWalletError\", r.message = \"Some of the parameters you provided are invalid\", r;\n  }\n\n  return c(r, e), r;\n}(y),\n    O = function () {\n  function e(e) {\n    this.appName = e;\n  }\n\n  var a,\n      i = e.prototype;\n  return i.toTezos = function () {\n    _(this.pkh);\n\n    var e = new r();\n    return e.setProvider({\n      wallet: this,\n      rpc: this.rpc\n    }), e;\n  }, i.connect = function (e, r) {\n    void 0 === r && (r = {\n      forcePermission: !1\n    });\n\n    try {\n      var t = this;\n      return Promise.resolve(m(e, {\n        name: t.appName\n      }, r.forcePermission)).then(function (e) {\n        var r = e.rpc;\n        t.pkh = e.pkh, t.rpc = r;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, i.getPKH = function () {\n    try {\n      return _(this.pkh), Promise.resolve(this.pkh);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, i.mapTransferParamsToWalletParams = function (e) {\n    try {\n      return Promise.resolve(t(e));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, i.mapOriginateParamsToWalletParams = function (e) {\n    try {\n      return Promise.resolve(n(e));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, i.mapDelegateParamsToWalletParams = function (e) {\n    try {\n      return Promise.resolve(o(e));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, i.sendOperations = function (e) {\n    try {\n      return _(this.pkh), Promise.resolve(l(this.pkh, e.map(T)));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, (a = [{\n    key: \"connected\",\n    get: function () {\n      return Boolean(this.pkh);\n    }\n  }]) && function (e, r) {\n    for (var t = 0; t < r.length; t++) {\n      var n = r[t];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }(e.prototype, a), e;\n}();\n\nO.isAvailable = f, O.onAvailabilityChange = v;\n\nvar N = function (e) {\n  function r() {\n    var r;\n    return (r = e.apply(this, arguments) || this).name = \"ThanosWalletNotConnected\", r.message = \"You need to connect ThanosWallet by calling thanosWallet.connect() first\", r;\n  }\n\n  return c(r, e), r;\n}(y);\n\nfunction _(e) {\n  if (!e) throw new N();\n}\n\nfunction T(e) {\n  var r = p(e, [\"fee\", \"gas_limit\", \"storage_limit\"]);\n\n  if (\"transaction\" === e.kind) {\n    var t = r.destination,\n        n = r.amount,\n        o = r.parameters;\n    return u({}, p(r, [\"destination\", \"amount\", \"parameters\"]), {\n      to: t,\n      amount: +n,\n      mutez: !0,\n      parameter: o\n    });\n  }\n\n  return r;\n}\n\nexport { R as InvalidParamsThanosWalletError, N as NotConnectedThanosWalletError, w as NotFoundThanosWalletError, E as NotGrantedThanosWalletError, i as ThanosDAppErrorType, a as ThanosDAppMessageType, s as ThanosPageMessageType, O as ThanosWallet, y as ThanosWalletError, f as isAvailable, v as onAvailabilityChange, l as requestOperation, m as requestPermission };","map":{"version":3,"sources":["../src/types.ts","../src/client.ts","../src/taquito-wallet.ts"],"names":["ThanosDAppMessageType","ThanosDAppErrorType","ThanosPageMessageType","isAvailable","Promise","resolve","handleMessage","evt","source","window","data","type","Response","payload","done","result","removeEventListener","clearTimeout","t","send","Request","addEventListener","setTimeout","onAvailabilityChange","callback","currentStatus","check","attempt","initial","available","requestPermission","network","appMeta","force","res","request","PermissionRequest","assertResponse","PermissionResponse","pkh","rpc","requestOperation","sourcePkh","opParams","OperationRequest","OperationResponse","opHash","reject","reqId","nanoid","ErrorResponse","createError","NotGranted","NotGrantedThanosWalletError","NotFound","NotFoundThanosWalletError","InvalidParams","InvalidParamsThanosWalletError","startsWith","Error","replace","ThanosWalletError","condition","msg","postMessage","this","_this","_this2","_this3","ThanosWallet","appName","Boolean","toTezos","assertConnected","tezos","TezosToolkit","setProvider","wallet","connect","opts","forcePermission","name","getPKH","mapTransferParamsToWalletParams","params","createTransferOperation","mapOriginateParamsToWalletParams","createOriginationOperation","mapDelegateParamsToWalletParams","createSetDelegateOperation","sendOperations","map","formatOpParams","NotConnectedThanosWalletError","_this7","op","fee","rest","kind","destination","amount","parameters","to","mutez","parameter"],"mappings":"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","sourcesContent":["export type ThanosDAppMessage = ThanosDAppRequest | ThanosDAppResponse;\n\nexport type ThanosDAppRequest =\n  | ThanosDAppPermissionRequest\n  | ThanosDAppOperationRequest;\n\nexport type ThanosDAppResponse =\n  | ThanosDAppPermissionResponse\n  | ThanosDAppOperationResponse;\n\nexport interface ThanosDAppMessageBase {\n  type: ThanosDAppMessageType;\n}\n\nexport enum ThanosDAppMessageType {\n  PermissionRequest = \"PERMISSION_REQUEST\",\n  PermissionResponse = \"PERMISSION_RESPONSE\",\n  OperationRequest = \"OPERATION_REQUEST\",\n  OperationResponse = \"OPERATION_RESPONSE\",\n}\n\n/**\n * Messages\n */\n\nexport interface ThanosDAppPermissionRequest extends ThanosDAppMessageBase {\n  type: ThanosDAppMessageType.PermissionRequest;\n  network: ThanosDAppNetwork;\n  appMeta: ThanosDAppMetadata;\n  force?: boolean;\n}\n\nexport interface ThanosDAppPermissionResponse extends ThanosDAppMessageBase {\n  type: ThanosDAppMessageType.PermissionResponse;\n  pkh: string;\n  rpc: string;\n}\n\nexport interface ThanosDAppOperationRequest extends ThanosDAppMessageBase {\n  type: ThanosDAppMessageType.OperationRequest;\n  sourcePkh: string;\n  opParams: any[];\n}\n\nexport interface ThanosDAppOperationResponse extends ThanosDAppMessageBase {\n  type: ThanosDAppMessageType.OperationResponse;\n  opHash: string;\n}\n\n/**\n * Errors\n */\nexport enum ThanosDAppErrorType {\n  NotGranted = \"NOT_GRANTED\",\n  NotFound = \"NOT_FOUND\",\n  InvalidParams = \"INVALID_PARAMS\",\n}\n\n/**\n * Misc\n */\n\nexport type ThanosDAppNetwork =\n  | \"mainnet\"\n  | \"carthagenet\"\n  | \"labnet\"\n  | \"sandbox\";\n\nexport interface ThanosDAppMetadata {\n  name: string;\n}\n\nexport interface ThanosPageMessage {\n  type: ThanosPageMessageType;\n  payload: any;\n  reqId?: string | number;\n}\n\nexport enum ThanosPageMessageType {\n  Request = \"THANOS_PAGE_REQUEST\",\n  Response = \"THANOS_PAGE_RESPONSE\",\n  ErrorResponse = \"THANOS_PAGE_ERROR_RESPONSE\",\n}\n","import { nanoid } from \"nanoid\";\nimport {\n  ThanosPageMessageType,\n  ThanosPageMessage,\n  ThanosDAppMessageType,\n  ThanosDAppRequest,\n  ThanosDAppResponse,\n  ThanosDAppErrorType,\n  ThanosDAppNetwork,\n  ThanosDAppMetadata,\n} from \"./types\";\n\nexport function isAvailable() {\n  return new Promise<boolean>((resolve) => {\n    const handleMessage = (evt: MessageEvent) => {\n      if (\n        evt.source === window &&\n        evt.data?.type === ThanosPageMessageType.Response &&\n        evt.data?.payload === \"PONG\"\n      ) {\n        done(true);\n      }\n    };\n\n    const done = (result: boolean) => {\n      resolve(result);\n      window.removeEventListener(\"message\", handleMessage);\n      clearTimeout(t);\n    };\n\n    send({\n      type: ThanosPageMessageType.Request,\n      payload: \"PING\",\n    });\n    window.addEventListener(\"message\", handleMessage);\n    const t = setTimeout(() => done(false), 500);\n  });\n}\n\nexport function onAvailabilityChange(callback: (available: boolean) => void) {\n  let t: any;\n  let currentStatus = false;\n  const check = async (attempt = 0) => {\n    const initial = attempt < 5;\n    const available = await isAvailable();\n    if (currentStatus !== available) {\n      callback(available);\n      currentStatus = available;\n    }\n    t = setTimeout(\n      check,\n      available ? 10_000 : !initial ? 5_000 : 0,\n      initial ? attempt + 1 : attempt\n    );\n  };\n  check();\n  return () => clearTimeout(t);\n}\n\nexport async function requestPermission(\n  network: ThanosDAppNetwork,\n  appMeta: ThanosDAppMetadata,\n  force: boolean\n) {\n  const res = await request({\n    type: ThanosDAppMessageType.PermissionRequest,\n    network,\n    appMeta,\n    force,\n  });\n  assertResponse(res.type === ThanosDAppMessageType.PermissionResponse);\n  return { pkh: res.pkh, rpc: res.rpc };\n}\n\nexport async function requestOperation(sourcePkh: string, opParams: any) {\n  const res = await request({\n    type: ThanosDAppMessageType.OperationRequest,\n    sourcePkh,\n    opParams,\n  });\n  assertResponse(res.type === ThanosDAppMessageType.OperationResponse);\n  return res.opHash;\n}\n\nfunction request(payload: ThanosDAppRequest) {\n  return new Promise<ThanosDAppResponse>((resolve, reject) => {\n    const reqId = nanoid();\n    const handleMessage = (evt: MessageEvent) => {\n      const res = evt.data as ThanosPageMessage;\n      switch (true) {\n        case evt.source !== window || res?.reqId !== reqId:\n          return;\n\n        case res?.type === ThanosPageMessageType.Response:\n          resolve(res.payload);\n          window.removeEventListener(\"message\", handleMessage);\n          break;\n\n        case res?.type === ThanosPageMessageType.ErrorResponse:\n          reject(createError(res.payload));\n          window.removeEventListener(\"message\", handleMessage);\n          break;\n      }\n    };\n\n    send({\n      type: ThanosPageMessageType.Request,\n      payload,\n      reqId,\n    });\n\n    window.addEventListener(\"message\", handleMessage);\n  });\n}\n\nfunction createError(payload: any) {\n  switch (true) {\n    case payload === ThanosDAppErrorType.NotGranted:\n      return new NotGrantedThanosWalletError();\n\n    case payload === ThanosDAppErrorType.NotFound:\n      return new NotFoundThanosWalletError();\n\n    case payload === ThanosDAppErrorType.InvalidParams:\n      return new InvalidParamsThanosWalletError();\n\n    case payload?.startsWith(\"__tezos__\"):\n      return new Error(payload.replace(\"__tezos__\", \"\"));\n\n    default:\n      return new ThanosWalletError();\n  }\n}\n\nfunction assertResponse(condition: any): asserts condition {\n  if (!condition) {\n    throw new Error(\"Invalid response recieved\");\n  }\n}\n\nfunction send(msg: ThanosPageMessage) {\n  window.postMessage(msg, \"*\");\n}\n\nexport class ThanosWalletError implements Error {\n  name = \"ThanosWalletError\";\n  message = \"An unknown error occured. Please try again or report it\";\n}\n\nexport class NotGrantedThanosWalletError extends ThanosWalletError {\n  name = \"NotGrantedThanosWalletError\";\n  message = \"Permission Not Granted\";\n}\n\nexport class NotFoundThanosWalletError extends ThanosWalletError {\n  name = \"NotFoundThanosWalletError\";\n  message = \"Account Not Found. Try connect again\";\n}\n\nexport class InvalidParamsThanosWalletError extends ThanosWalletError {\n  name = \"InvalidParamsThanosWalletError\";\n  message = \"Some of the parameters you provided are invalid\";\n}\n","import {\n  TezosToolkit,\n  WalletProvider,\n  createOriginationOperation,\n  createSetDelegateOperation,\n  createTransferOperation,\n  WalletDelegateParams,\n  WalletOriginateParams,\n  WalletTransferParams,\n} from \"@taquito/taquito\";\n\nimport {\n  isAvailable,\n  onAvailabilityChange,\n  requestPermission,\n  requestOperation,\n  ThanosWalletError,\n} from \"./client\";\n\nimport { ThanosDAppNetwork } from \"./types\";\n\nexport class ThanosWallet implements WalletProvider {\n  static isAvailable = isAvailable;\n  static onAvailabilityChange = onAvailabilityChange;\n\n  private pkh?: string;\n  public rpc?: string;\n\n  constructor(private appName: string) {}\n\n  get connected() {\n    return Boolean(this.pkh);\n  }\n\n  toTezos() {\n    assertConnected(this.pkh);\n    const tezos = new TezosToolkit();\n    tezos.setProvider({ wallet: this, rpc: this.rpc });\n    return tezos;\n  }\n\n  async connect(network: ThanosDAppNetwork, opts = { forcePermission: false }) {\n    const { pkh, rpc } = await requestPermission(\n      network,\n      { name: this.appName },\n      opts.forcePermission\n    );\n    this.pkh = pkh;\n    this.rpc = rpc;\n  }\n\n  async getPKH() {\n    assertConnected(this.pkh);\n    return this.pkh;\n  }\n\n  async mapTransferParamsToWalletParams(params: WalletTransferParams) {\n    return createTransferOperation(params);\n  }\n\n  async mapOriginateParamsToWalletParams(params: WalletOriginateParams) {\n    return createOriginationOperation(params as any);\n  }\n\n  async mapDelegateParamsToWalletParams(params: WalletDelegateParams) {\n    return createSetDelegateOperation(params as any);\n  }\n\n  async sendOperations(opParams: any[]) {\n    assertConnected(this.pkh);\n    return requestOperation(this.pkh, opParams.map(formatOpParams));\n  }\n}\n\nexport class NotConnectedThanosWalletError extends ThanosWalletError {\n  name = \"ThanosWalletNotConnected\";\n  message =\n    \"You need to connect ThanosWallet by calling thanosWallet.connect() first\";\n}\n\nfunction assertConnected(pkh?: string): asserts pkh {\n  if (!pkh) {\n    throw new NotConnectedThanosWalletError();\n  }\n}\n\nfunction formatOpParams(op: any) {\n  const { fee, gas_limit, storage_limit, ...rest } = op;\n  if (op.kind === \"transaction\") {\n    const { destination, amount, parameters, ...txRest } = rest;\n    return {\n      ...txRest,\n      to: destination,\n      amount: +amount,\n      mutez: true,\n      parameter: parameters,\n    };\n  }\n  return rest;\n}\n"]},"metadata":{},"sourceType":"module"}