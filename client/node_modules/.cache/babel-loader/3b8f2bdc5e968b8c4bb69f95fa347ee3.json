{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst blakejs = __importStar(require(\"blakejs\"));\n\nconst jsonpath_plus_1 = require(\"jsonpath-plus\");\n\nconst TezosLanguageUtil_1 = require(\"../TezosLanguageUtil\");\n\nconst TezosMessageUtil_1 = require(\"../TezosMessageUtil\");\n\nconst TezosNodeReader_1 = require(\"../TezosNodeReader\");\n\nconst TezosNodeWriter_1 = require(\"../TezosNodeWriter\");\n\nconst TezosTypes = __importStar(require(\"../../../types/tezos/TezosChainTypes\"));\n\nvar StakerDAOTokenHelper;\n\n(function (StakerDAOTokenHelper) {\n  function verifyDestination(server, address) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const contract = yield TezosNodeReader_1.TezosNodeReader.getAccountForBlock(server, 'head', address);\n\n      if (!!!contract.script) {\n        throw new Error(`No code found at ${address}`);\n      }\n\n      const k = Buffer.from(blakejs.blake2s(JSON.stringify(contract.script.code), null, 16)).toString('hex');\n\n      if (k !== '0e3e137841a959521324b4ce20ca2df7') {\n        throw new Error(`Contract does not match the expected code hash: ${k}, '0e3e137841a959521324b4ce20ca2df7'`);\n      }\n\n      return true;\n    });\n  }\n\n  StakerDAOTokenHelper.verifyDestination = verifyDestination;\n\n  function verifyScript(script) {\n    const k = Buffer.from(blakejs.blake2s(TezosLanguageUtil_1.TezosLanguageUtil.preProcessMichelsonScript(script).join('\\n'), null, 16)).toString('hex');\n\n    if (k !== 'b77ada691b1d630622bea243696c84d7') {\n      throw new Error(`Contract does not match the expected code hash: ${k}, 'b77ada691b1d630622bea243696c84d7'`);\n    }\n\n    return true;\n  }\n\n  StakerDAOTokenHelper.verifyScript = verifyScript;\n\n  function getAccountBalance(server, mapid, account) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const packedKey = TezosMessageUtil_1.TezosMessageUtils.encodeBigMapKey(Buffer.from(TezosMessageUtil_1.TezosMessageUtils.writePackedData(account, 'address'), 'hex'));\n      const mapResult = yield TezosNodeReader_1.TezosNodeReader.getValueForBigMapKey(server, mapid, packedKey);\n\n      if (mapResult === undefined) {\n        throw new Error(`Map ${mapid} does not contain a record for ${account}`);\n      }\n\n      return Number(jsonpath_plus_1.JSONPath({\n        path: '$.int',\n        json: mapResult\n      })[0]);\n    });\n  }\n\n  StakerDAOTokenHelper.getAccountBalance = getAccountBalance;\n\n  function getSimpleStorage(server, address) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const storageResult = yield TezosNodeReader_1.TezosNodeReader.getContractStorage(server, address);\n      return {\n        mapid: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[1].args[0].int',\n          json: storageResult\n        })[0]),\n        council: jsonpath_plus_1.JSONPath({\n          path: '$.args[0].args[0].args[1]..string',\n          json: storageResult\n        }),\n        stage: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[0].args[0].int',\n          json: storageResult\n        })[0]),\n        phase: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[0].args[0].int',\n          json: storageResult\n        })[0]) % 4,\n        supply: Number(jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[0].args[1].int',\n          json: storageResult\n        })[0]),\n        paused: jsonpath_plus_1.JSONPath({\n          path: '$.args[1].args[1].args[1].args[0].prim',\n          json: storageResult\n        })[0].toString().toLowerCase().startsWith('t')\n      };\n    });\n  }\n\n  StakerDAOTokenHelper.getSimpleStorage = getSimpleStorage;\n\n  function transferBalance(server, keystore, contract, fee, source, destination, amount, gas, freight) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const parameters = `(Right (Left (Left (Right (Pair \"${source}\" (Pair \"${destination}\" ${amount}))))))`;\n      const nodeResult = yield TezosNodeWriter_1.TezosNodeWriter.sendContractInvocationOperation(server, keystore, contract, 0, fee, keystore.derivationPath, freight, gas, '', parameters, TezosTypes.TezosParameterFormat.Michelson);\n      return clearRPCOperationGroupHash(nodeResult.operationGroupID);\n    });\n  }\n\n  StakerDAOTokenHelper.transferBalance = transferBalance;\n\n  function clearRPCOperationGroupHash(hash) {\n    return hash.replace(/\\\"/g, '').replace(/\\n/, '');\n  }\n})(StakerDAOTokenHelper = exports.StakerDAOTokenHelper || (exports.StakerDAOTokenHelper = {}));","map":{"version":3,"sources":["../../../../src/chain/tezos/contracts/StakerDAOTokenHelper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst blakejs = __importStar(require(\"blakejs\"));\nconst jsonpath_plus_1 = require(\"jsonpath-plus\");\nconst TezosLanguageUtil_1 = require(\"../TezosLanguageUtil\");\nconst TezosMessageUtil_1 = require(\"../TezosMessageUtil\");\nconst TezosNodeReader_1 = require(\"../TezosNodeReader\");\nconst TezosNodeWriter_1 = require(\"../TezosNodeWriter\");\nconst TezosTypes = __importStar(require(\"../../../types/tezos/TezosChainTypes\"));\nvar StakerDAOTokenHelper;\n(function (StakerDAOTokenHelper) {\n    function verifyDestination(server, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contract = yield TezosNodeReader_1.TezosNodeReader.getAccountForBlock(server, 'head', address);\n            if (!!!contract.script) {\n                throw new Error(`No code found at ${address}`);\n            }\n            const k = Buffer.from(blakejs.blake2s(JSON.stringify(contract.script.code), null, 16)).toString('hex');\n            if (k !== '0e3e137841a959521324b4ce20ca2df7') {\n                throw new Error(`Contract does not match the expected code hash: ${k}, '0e3e137841a959521324b4ce20ca2df7'`);\n            }\n            return true;\n        });\n    }\n    StakerDAOTokenHelper.verifyDestination = verifyDestination;\n    function verifyScript(script) {\n        const k = Buffer.from(blakejs.blake2s(TezosLanguageUtil_1.TezosLanguageUtil.preProcessMichelsonScript(script).join('\\n'), null, 16)).toString('hex');\n        if (k !== 'b77ada691b1d630622bea243696c84d7') {\n            throw new Error(`Contract does not match the expected code hash: ${k}, 'b77ada691b1d630622bea243696c84d7'`);\n        }\n        return true;\n    }\n    StakerDAOTokenHelper.verifyScript = verifyScript;\n    function getAccountBalance(server, mapid, account) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const packedKey = TezosMessageUtil_1.TezosMessageUtils.encodeBigMapKey(Buffer.from(TezosMessageUtil_1.TezosMessageUtils.writePackedData(account, 'address'), 'hex'));\n            const mapResult = yield TezosNodeReader_1.TezosNodeReader.getValueForBigMapKey(server, mapid, packedKey);\n            if (mapResult === undefined) {\n                throw new Error(`Map ${mapid} does not contain a record for ${account}`);\n            }\n            return Number(jsonpath_plus_1.JSONPath({ path: '$.int', json: mapResult })[0]);\n        });\n    }\n    StakerDAOTokenHelper.getAccountBalance = getAccountBalance;\n    function getSimpleStorage(server, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const storageResult = yield TezosNodeReader_1.TezosNodeReader.getContractStorage(server, address);\n            return {\n                mapid: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[1].args[0].int', json: storageResult })[0]),\n                council: jsonpath_plus_1.JSONPath({ path: '$.args[0].args[0].args[1]..string', json: storageResult }),\n                stage: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[0].args[0].int', json: storageResult })[0]),\n                phase: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[0].args[0].int', json: storageResult })[0]) % 4,\n                supply: Number(jsonpath_plus_1.JSONPath({ path: '$.args[1].args[0].args[1].int', json: storageResult })[0]),\n                paused: (jsonpath_plus_1.JSONPath({ path: '$.args[1].args[1].args[1].args[0].prim', json: storageResult })[0]).toString().toLowerCase().startsWith('t')\n            };\n        });\n    }\n    StakerDAOTokenHelper.getSimpleStorage = getSimpleStorage;\n    function transferBalance(server, keystore, contract, fee, source, destination, amount, gas, freight) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parameters = `(Right (Left (Left (Right (Pair \"${source}\" (Pair \"${destination}\" ${amount}))))))`;\n            const nodeResult = yield TezosNodeWriter_1.TezosNodeWriter.sendContractInvocationOperation(server, keystore, contract, 0, fee, keystore.derivationPath, freight, gas, '', parameters, TezosTypes.TezosParameterFormat.Michelson);\n            return clearRPCOperationGroupHash(nodeResult.operationGroupID);\n        });\n    }\n    StakerDAOTokenHelper.transferBalance = transferBalance;\n    function clearRPCOperationGroupHash(hash) {\n        return hash.replace(/\\\"/g, '').replace(/\\n/, '');\n    }\n})(StakerDAOTokenHelper = exports.StakerDAOTokenHelper || (exports.StakerDAOTokenHelper = {}));\n//# sourceMappingURL=StakerDAOTokenHelper.js.map"]},"metadata":{},"sourceType":"script"}